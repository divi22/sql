1.1:-
1)select staff_name,design_code  from staff_master where (HIREDATE<'01-JAN-2003') AND staff_sal between 12000 and 25000;
alter table staff_master rename column staff_name to staff_nm;
alter table staff_master rename column design_code to des_code;

2) select staff_code,staff_nm,dept_code from staff_master
   
where(sysdate-hiredate)/365>=18 order by (sysdate-hiredate)/365 asc ;

3)select * from staff_master where mgr_code=null;

4) select * from book_master where book_pub_year between 2001 and 2004;
 select * from book_master where book_name like '%&%';

5)select staff_name from staff_master where staff_name like '%\_%' escape'\';



2.1:-
1)select staff_name,lpad(staff_Sal,15,$)staff_sal from staff_master;

2)select student_name,initcap(to_char(student_dob,'MONTH,DD YYYY')) as DOB from student_master
where to_char(student_dob,'DY')='SUN' or
to_char(student_dob,'DY')='SAT';

3)select staff_nm,round((sysdate-hiredate)/12) as "Months Worked"
from staff_master order by (round(sysdate-hiredate)/12);

4)select * from staff_master
where to_char(hiredate,'mon')='dec' AND to_char(hiredate,'DD')<15;

5)select staff_nm,staff_sal,
case
when staff_sal>=10000 and staff_sal<25000 then 'C'
when staff_sal>=25000 and staff_sal<50000 then 'B'
when staff_sal>=50000 then 'A'
else 'D'
end as salary
from staff_master;

6)select staff_nm ,hiredate, to_char(hiredate,'fmDAY') as Day from staff_master order by 
	case
		when to_char(hiredate,'fmDAY')='MONDAY' then 1
		when to_char(hiredate,'fmDAY')='TUESDAY' then 2
		when to_char(hiredate,'fmDAY')='WEDNESDAY' then 3
		when to_char(hiredate,'fmDAY')='THURSDAY' then 4
		when to_char(hiredate,'fmDAY')='FRIDAY' then 5
		when to_char(hiredate,'fmDAY')='SATURDAY' then 6
		when to_char(hiredate,'fmDAY')='SUNDAY' then 7
	END;

7)select instr('mississippi','i',1,3) as POSITION from dual;

8)select to_char((select next_day(last_day(sysdate),'FRIDAY')-7 from dual),
	'DDTHSP" of" MONTH","YYYY') as "Last Friday"from dual;

9)select student_code,student_name,dept_code
,decode(dept_code,20,'Electricals',30,'Electronics','Others') as
"Dept_name" from student_master;


2.2:-

1)select round(max(staff_sal)) as Maximum,
	      round(min(staff_sal)) as Minimum,
	      round(sum(staff_sal)) as Total,
	      round(avg(staff_sal)) as Average 
	      from staff_master;

2)select dept_code,count(mgr_code)as "Total Number of Managers" from staff_master group by dept_code;

3)select sum(sal),deptno
from emp
where job<>'MANAGER'
group by deptno
having sum(sal)>20000;




3.1:-

1) 
select staff_nm,S.dept_code,D.dept_name ,staff_sal 
 	from staff_master S , department_master D 
	where s.dept_code=d.dept_code and staff_sal>20000;

2) 
SELECT S.STAFF_CODE AS STAFF#,S.STAFF_NM AS STAFF,D.DEPT_NAME AS 	DEPARTMENT,M.STAFF_CODE AS MGR#,M.STAFF_NM AS MGR 
	FROM STAFF_MASTER S , STAFF_MASTER M,DEPARTMENT_MASTER D 
	WHERE S.MGR_CODE=M.STAFF_CODE AND S.DEPT_CODE=D.DEPT_CODE;

3) 
SELECT S.STUDENT_CODE,S.STUDENT_NAME,T.BOOK_CODE,B.BOOK_NAME 
	FROM STUDENT_MASTER S,BOOK_MASTER B,BOOK_TRANSACTIONS T
	WHERE (T.STUDENT_CODE=S.STUDENT_CODE AND T.BOOK_CODE=B.BOOK_CODE) 
AND 
	T.BOOK_EXPECTED_RETURN_DATE=(SELECT SYSDATE FROM DUAL);

4) 
select s.staff_code,s.staff_nm,d.dept_name,g.design_name,T.book_code,b.book_name,T.book_issue_date
	from staff_master S,department_master D,designation_master G,book_master B,book_transactions T
	where( t.staff_code=s.staff_code and t.book_code=b.book_code and s.design_code=G.des_code and s.dept_code=d.dept_code)
	and
	t.book_issue_date > (select sysdate-30 from dual)and t.book_issue_date <= (select sysdate from dual);

5)
select s.staff_code,s.staff_nm,g.design_name,T.book_code,b.book_name, 
	((select sysdate from dual)-(t.book_expected_return_date)) * 5 as fine
	from staff_master S,department_master D,designation_master G,book_master B,book_transactions T
	where t.book_actual_return_date is null ;

6) 
select staff_code , staff_nm, staff_sal 
	from staff_master 
	where staff_sal<(select avg(staff_sal) from staff_master);

7) 
select book_pub_author, book_name  from book_master 
	where book_pub_author in(select book_pub_author
	from book_master  group by book_pub_author
	having count(book_pub_author)>1);

8) 
select b.staff_code , s.staff_nm , d.dept_name
	from staff_master S , book_transactions B, department_master D 
	where b.staff_code =s.staff_code and s.dept_code=d.dept_code and
	s.staff_code in (select staff_code from book_transactions group by staff_code having count(staff_code)>1) 
	group by b.staff_code,s.staff_nm, d.dept_name;

9)
select s.student_code,s.student_name,d.dept_name
	from student_master S, department_master D
	where s.dept_code=d.dept_code and
	s.dept_code=(select dept_code from(select count(*), dept_code from student_master group by dept_code order by count(*) desc) where rownum<=1);

10)select s.staff_code,s.staff_nm,d.dept_name,des.design_name
from staff_master s,department_master d,designation_master des
where s.dept_code=d.dept_code and s.design_code=des.design_code and
s.hiredate between sysdate-90 and sysdate;


11)
select A.staff_nm as Manager, count(*) as "strength of his/her team"  
	from staff_master A, staff_master B 
	where A.staff_code=B.mgr_code 
	group by A.staff_nm;

12)


13) select s.dept_code as "Department Code",d.dept_name as "Department Name"
,count(s.staff_nm) as "Number of People" from staff_master
s,department_master d where s.dept_code=d.dept_code group by d.dept_name,s.dept_code;



4.1:-
SQL> create table Customer(Customerid Number(5),CustomerName Number(10),Address1 Varchar2(30),Address2 Varchar2(30));
4.2:
SQL> Alter table customer modify customername  varchar2(30) Not Null;
4.3:
SQL> ALTER TABLE Customer ADD (Gender Varchar2(1),Age Number(3),PhoneNo Number(10));
4.4:
SQL> Insert into customer values (1000,'Allen', '#115 Chicago ', '#115 Chicago', 'M', 25, 7878776);

1 row created.

SQL> Insert into customer values (1001, 'George', '#116 France', '#116 France', 'M', 25, 434524);

1 row created.

SQL> Insert into customer values (1002, 'Becker', '#114 New York', '#114 New York', 'M', 45, 431525);

1 row created.
SQL> select * from customer;
4.5:
SQL> Alter table customer add constraints custid_prim primary key (customerid);

Table altered.

SQL> desc customer;
4.6:
SQL> Insert into customer values (1002,'John', '#114 Chicago', '#114 Chicago', 'M', 45, 439525);
Insert into customer values (1002,'John', '#114 Chicago', '#114 Chicago', 'M', 45, 439525)

4.7:
SQL> Alter table customer drop constraints custid_prim ;

Table altered.

SQL> Insert into customer values (1002,' Becker', '#114 New York', '#114 New york' , 'M', 45, 431525);

1 row created.

SQL> Insert into customer values (1003, 'Nanapatekar', '#115 India', '#115 India' , 'M', 45, 431525);

1 row created.

SQL> select * from customer;
4.8:
SQL> Alter table customer drop constraints custid_prim ;

Table altered.

SQL> Insert into customer values (1002,' Becker', '#114 New York', '#114 New york' , 'M', 45, 431525);

1 row created.

SQL> Insert into customer values (1003, 'Nanapatekar', '#115 India', '#115 India' , 'M', 45, 431525);

1 row created.

SQL> select * from customer;
4.9:
SQL> ALTER TABLE Customer ADD (sal number(10));

Table altered.

SQL> Insert into customer values (1002, 'Becker', '#114 New York', '#114 New york' , 'M', 45, 431525, 15000.50);

1 row created.

SQL> Insert into customer values (1003, 'Nanapatekar', '#115 India', '#115 India' , 'M', 45, 431525, 20000.50);

1 row created.

SQL> select * from customer;
4.10:
SQL> select * from customer;
SQL> truncate table customer;

Table truncated.


SQL> select * from customer;

no rows selected
4.11:
****use of nvarchar(255) is 64 characters for local part + @ + 255 for domain name. 
SQL> ALTER TABLE Customer ADD (E_mail nvarchar2(255));

Table altered
4.12:
SQL> ALTER TABLE Customer drop column E_mail;

Table altered.
4.13:
SQL> create table Suppliers as select customerid as suppid,customername as sname,address1 as addr1,address2 as addr2,phoneno as contactno from customer;

Table created.
4.14:
SQL>Drop table Suppliers;
SQL> create table CustomerMaster(CustomerId Number(5),CustomerName Varchar2(30) Not Null,Addressl Varchar2(30) Not Null,
Address2 Varchar2(30),Gender Varchar2(1),Age Number(3),PhoneNo Number(10),CONSTRAINT custID_PK PRIMARY KEY (CustomerId));

Table created.
4.15:
SQL> create table Accountmaster(Customerld Number(5),AccountNumber Number(10,2) ,AccountType Char(3),LedgerBalance Number(10,2) Not Null,
constraint Acc_PK primary key (AccountNumber));

Table created.
SQL> desc Accountmaster;
SQL> Create sequence seq_acc MINVALUE 101 MAXVALUE 10000 START WITH 101 INCREMENT BY 1 CACHE 101;

Sequence created.
4.16:
SQL> ALTER TABLE AccountMaster ADD constraint Cust_acc foreign key (customerId) REFERENCES customermaster(customerId);

Table altered.
4.17:
SQL> Insert into customermaster values(1000, 'Allen',' #115 Chicago', '#115 Chicago', 'M', 25, 7878776);

1 row created.

SQL> Insert into customermaster values(1001,' George', '#116 France', '#116 France', 'M', 25, 434524);

1 row created.

SQL> Insert into customermaster values(1002,' Becker', '#114 New York', '#114 New York', 'M', 45, 431525);

1 row created.
SQL> select * from customermaster;
4.18:
SQL> alter table accountmaster add constraint acc_type check(accounttype='NRI' OR accounttype='IND');

Table altered.
4.19:
SQL> alter table accountmaster add constraint balance_check check(ledgerbalance>5000);

Table altered.
4.20:
SQL> Delete from customermaster where not exists (select 1 from accountmaster where customermaster.customerid=accountmaster.customerid);

0 rows deleted.
4.21:
SQL> create table accountdetails as(select * from accountmaster);

Table created.
4.22:
SQL> create or replace view Acc_view as select accountmaster.customerid as customercode,customermaster.customername as
 accountholdername,accountnumber as accountnumber,accounttype as type,ledgerbalance as balance from accountmaster,customermaster where customermaster.customerid=accountmaster.customerid;

View created.

SQL> select * from acc_view;
4.23:
SQL> create view vAccs_Dtls as select * from accountmaster where ledgerbalance>5000 AND accounttype='IND' with check option constraint vAccs_dtls;

View created.

SQL> select * from vAccs_dtls;
4.24:
SQL> CREATE VIEW accsvw10 AS SELECT * FROM accountmaster WITH READ ONLY CONSTRAINT my_view_r_o;

View created.

SQL> select * from accsvw10;

4.25:
SQL> Create sequence seq_dept MINVALUE 40 MAXVALUE 200 START WITH 40 INCREMENT BY 10 ;

Sequence created.
4.26:
SQL> insert into department_master values(seq_dept.nextval,'It','paris');

1 row created.

SQL> insert into department_mastervalues(seq_dept.nextval,'backend','france');

1 row created.

SQL> insert into department_mastervalues(seq_dept.nextval,'maintainance','INDIA');

1 row created.

SQL> select * from dept_master;
4.27:
SQL> drop sequence seq_dept;

Sequence dropped.
4.28:
select index_name,index_type,table_owner,table_type,table_name 
from user_in
dexes where index_name="NO_NAME";

4.29:
create synonym synEmp for EMP;

4.30:
select synonym_name,table_owner,table_name,db_link from
user_synonyms where
synonym_name='synEMP';

4.31:
create index idx_emp_hiredate on employee(hiredate);

4.32:

create sequence seq_emp
start with 1001
minvalue 1001
nocycle;


5.1:-
1)
SQL> CREATE Table Employee
  2  AS
  3  select * from emp where 1=3;

SQL> desc employee;

SQL>select * from employee;

2)
SQL> select * from employee;

3)
SQL> update employee set job=(select job from employee where empno=7788),
deptno=(select deptno from employee where empno=7788) where empno=7698;

4)
SQL> DELETE FROM dept WHERE dname='SALES';

SQL> SELECT * FROM DEPT;

5)
UPDATE employee SET deptno=(SELECT deptno FROM employee WHERE empno=7698)
  WHERE empno=7788;

SQL> SELECT * FROM employee;

6)
SQL> insert into emp (empno,ename,job,mgr,hiredate,sal,comm,deptno) values (1000,'Allen', 'Clerk',1001,'12-jan-01', 3000, 2,10);

1 row created.

SQL> insert into emp (empno,ename,job,mgr,hiredate,sal,comm,deptno) values (1001,'George', 'analyst', null, '08 Sep 92', 5000,0, 10) ;

1 row created.

SQL> insert into emp (empno,ename,job,mgr,hiredate,sal,comm,deptno) values (1002, 'Becker', 'Manager', 1000, '4 Nov 92', 2800,4, 20);

1 row created.

SQL> insert into emp (empno,ename,job,mgr,hiredate,sal,comm,deptno) values (1003, 'Bill', 'Clerk', 1002, '4 Nov 92',3000, 0, 20);

1 row created.

SQL> select * from emp;


6:-
1)
SQL> INSERT INTO customermaster(customerid,customername,address1,address2,gender,age,phoneno) values (6000,'John', '#115 Chicago','#115 Chicago','M',25,7878776);

1 row created.

SQL> INSERT INTO customermaster (customerid,customername,address1,address2,gender,age,phoneno) values (6001,'Jack',' #116 France', '#116 France', 'M', 25, 434524);

1 row created.

SQL> INSERT INTO customermaster (customerid,customername,address1,address2,gender,age,phoneno) values (6002,' James', '#114 New York', '#114 New York', 'M', 45, 431525);

1 row created.

2)
SAVEPOINT SP1;

3)
insert into customermaster (customerid,customername,address1,address2,gender,age,phoneno) values (6003,' John', '#114 Chicago', '#114 Chicago', 'M', 45, 439525);

4)
SQL> ROLLBACK TO SP1;

Rollback complete.

SQL> SELECT * FROM CUSTOMERMASTER;

CUSTOMERID CUSTOMERNAME                   ADDRESS1                       ADDRESS2                    G      AGE  PHONENO
---------- ------------------------------ ------------------------------ ------------------------------ - -------- --------
      1000 Allen                          #115 Chicago                   #115 Chicago                M  25  7878776
      1001 George                         #116 New York                  #116 New York               M  25   434524
      1002 Becker                         #114 France                    #114 France                 M  45   432525





